import{_ as a,c as i,o as t,au as s}from"./chunks/framework.DtUFc-jG.js";const g=JSON.parse('{"title":"Guards","description":"","frontmatter":{},"headers":[],"relativePath":"guides/howtos/guards.md","filePath":"guides/howtos/guards.md"}'),r={name:"guides/howtos/guards.md"};function n(o,e,d,u,h,c){return t(),i("div",null,e[0]||(e[0]=[s(`<h1 id="guards" tabindex="-1">Guards <a class="header-anchor" href="#guards" aria-label="Permalink to &quot;Guards&quot;">​</a></h1><p><a href="https://router.vuejs.org/guide/advanced/navigation-guards.html" target="_blank" rel="noreferrer">Navigation guards</a> control access to <a href="https://quasar.dev/layout/routing-with-layouts-and-pages/" target="_blank" rel="noreferrer">routes</a> within an application. They allow you to define navigation rules in your app based on the user&#39;s status (authenticated or not), permissions, and route definitions.</p><h2 id="registering-and-unregistering-guards" tabindex="-1">Registering and Unregistering Guards <a class="header-anchor" href="#registering-and-unregistering-guards" aria-label="Permalink to &quot;Registering and Unregistering Guards&quot;">​</a></h2><p>Guards are registered and unregistered in the <code>boot/kdk.js</code> file.</p><h3 id="registering" tabindex="-1">Registering <a class="header-anchor" href="#registering" aria-label="Permalink to &quot;Registering&quot;">​</a></h3><p>To register a guard, use the <code>registerGuard</code> method :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { beforeGuard, authenticationGuard } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kalisio/kdk/core.client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authenticationGuard)</span></span></code></pre></div><h3 id="unregistering" tabindex="-1">Unregistering <a class="header-anchor" href="#unregistering" aria-label="Permalink to &quot;Unregistering&quot;">​</a></h3><p>To unregister a guard, use the <code>unregisterGuard</code> method :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authenticationGuard)</span></span></code></pre></div><h2 id="authentication-guard" tabindex="-1">Authentication guard <a class="header-anchor" href="#authentication-guard" aria-label="Permalink to &quot;Authentication guard&quot;">​</a></h2><p>The <code>authenticationGuard</code> function uses the metadata (<code>authenticated</code>, <code>unauthenticated</code> or <code>public</code>) defined in the <a href="https://quasar.dev/layout/routing-with-layouts-and-pages/" target="_blank" rel="noreferrer">routes</a> to check if a user is authenticated and whether to allow navigation.</p><h2 id="permissions-guard" tabindex="-1">Permissions guard <a class="header-anchor" href="#permissions-guard" aria-label="Permalink to &quot;Permissions guard&quot;">​</a></h2><p>The <code>permissionsGuard</code> function checks if the user has the necessary permissions to access a route. Permissions can be defined in the route&#39;s metadata (<code>can</code>) and may use route or query parameters.</p><h2 id="public-route-guard" tabindex="-1">Public route guard <a class="header-anchor" href="#public-route-guard" aria-label="Permalink to &quot;Public route guard&quot;">​</a></h2><p>The <code>publicRouteGuard</code> checks if the corresponding route is an existing public route or not.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>publicRouteGuard</code> should be defined after <code>authenticationGuard</code>.</p></div>`,17)]))}const p=a(r,[["render",n]]);export{g as __pageData,p as default};
