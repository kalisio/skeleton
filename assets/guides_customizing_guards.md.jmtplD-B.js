import{_ as e,c as a,o as s,V as i}from"./chunks/framework.Q5AHJ25T.js";const k=JSON.parse('{"title":"Guards","description":"","frontmatter":{},"headers":[],"relativePath":"guides/customizing/guards.md","filePath":"guides/customizing/guards.md"}'),t={name:"guides/customizing/guards.md"},r=i(`<h1 id="guards" tabindex="-1">Guards <a class="header-anchor" href="#guards" aria-label="Permalink to &quot;Guards&quot;">​</a></h1><p><a href="https://github.com/kalisio/kdk/blob/master/core/client/guards.js" target="_blank" rel="noreferrer">Guards</a> control access to routes within an application. They allow you to define navigation rules based on the user&#39;s status (authenticated or not), permissions, and route definitions.</p><h2 id="registering-and-unregistering-guards" tabindex="-1">Registering and Unregistering Guards <a class="header-anchor" href="#registering-and-unregistering-guards" aria-label="Permalink to &quot;Registering and Unregistering Guards&quot;">​</a></h2><p>Guards are registered and unregistered in the <code>boot/kdk.js</code> file.</p><h3 id="registering" tabindex="-1">Registering <a class="header-anchor" href="#registering" aria-label="Permalink to &quot;Registering&quot;">​</a></h3><p>To register a guard, use the <code>registerGuard</code> method :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authenticationGuard)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(routeGuard)</span></span></code></pre></div><h3 id="unregistering" tabindex="-1">Unregistering <a class="header-anchor" href="#unregistering" aria-label="Permalink to &quot;Unregistering&quot;">​</a></h3><p>To unregister a guard, use the <code>unregisterGuard</code> method :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authenticationGuard)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beforeGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterGuard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(routeGuard)</span></span></code></pre></div><h2 id="authentication-guard" tabindex="-1">Authentication Guard <a class="header-anchor" href="#authentication-guard" aria-label="Permalink to &quot;Authentication Guard&quot;">​</a></h2><p>The <code>authenticationGuard</code> function uses the metadata (<code>authenticated</code>, <code>unauthenticated</code> or <code>public</code>) defined in the <a href="https://quasar.dev/layout/routing-with-layouts-and-pages/" target="_blank" rel="noreferrer">routes</a> to check if a user is authenticated and whether to allow navigation.</p><h2 id="permissions-guard" tabindex="-1">Permissions Guard <a class="header-anchor" href="#permissions-guard" aria-label="Permalink to &quot;Permissions Guard&quot;">​</a></h2><p>The <code>permissionsGuard</code> function checks if the user has the necessary permissions to access a route. Permissions can be defined in the route&#39;s metadata (<code>can</code>) and may use route or query parameters.</p><h2 id="route-guard" tabindex="-1">Route Guard <a class="header-anchor" href="#route-guard" aria-label="Permalink to &quot;Route Guard&quot;">​</a></h2><p>The <code>routeGuard</code> checks if the corresponding route is valid.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>routeGuard</code> should be defined after <code>authenticationGuard</code>.</p></div>`,17),n=[r];function d(o,u,h,c,l,g){return s(),a("div",null,n)}const m=e(t,[["render",d]]);export{k as __pageData,m as default};
